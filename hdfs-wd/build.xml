

<project name="wdriver" default="run" basedir=".">


  <!-- =================================================================
       FI properties (please modify accordingly, my setup is for MAC)
       ================================================================= -->
  <property name="hadoop.root.dir"
	  location="../hdfs-fi"/>


  <!-- This is a possible setup for MAC -->  

  <property name="java.classes.dir" location="/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Classes"/>
  <property name="jsse.file" location="${java.classes.dir}/jsse.jar"/>
  <property name="jce.file"  location="${java.classes.dir}/jce.jar"/>

  
  <!-- This is a possible setup for Linux -->
<!--
  <property name="java.classes.dir" location="/usr/lib/jvm/java-6-sun/jre/lib"/>         
  <property name="jsse.file" location="${java.classes.dir}/jsse.jar"/>                   
  <property name="jce.file"  location="${java.classes.dir}/jce.jar"/>                    
-->


  <!-- =================================================================
       No need to modify.
       ================================================================= -->
  <property name="hadoop.build.dir" location="${hadoop.root.dir}/build/classes"/>
  <property name="fi.lib.dir" value="${hadoop.root.dir}/lib/fi"/>
  <property name="rpclib" location="${fi.lib.dir}/xmlrpc"/>
  <property name="jollib" location="${fi.lib.dir}/jol"/>


  <!-- NOTE: we need paths to: -->
  <path id="required.lib.path">
    <!-- 1. hadoop's lib such as LogFactory, aspectjrt, aspectjtools, etc. -->
    <fileset dir="${hadoop.root.dir}/lib" includes="*.jar"/>
    <!-- 2. conf/ dir to load hdfs-site.xml and core-site.xml -->
    <pathelement location="${hadoop.root.dir}/conf"/>
    <!-- 3. jsse.jar and jce.jar (because we're booting from woven-rt.jar) -->
    <pathelement location="${jsse.file}"/>
    <pathelement location="${jce.file}"/>
    <!-- 4. jol.jar (for FROG only, thanh doesn't need this -->
    <pathelement location="${jollib}/jol.jar"/>
    <!-- 5. xml rpc -->
    <pathelement location="${rpclib}/xmlrpc-server-3.1.3.jar"/>
    <pathelement location="${rpclib}/xmlrpc-client-3.1.3.jar"/>
    <pathelement location="${rpclib}/xmlrpc-common-3.1.3.jar"/>
    <pathelement location="${rpclib}/ws-commons-util-1.0.2.jar"/>
    <pathelement location="${rpclib}/commons-logging-1.1.jar"/>
  </path>

  <!-- =================================================================
       init
       ================================================================= -->
  <target name="init" >
    <tstamp/>
    <mkdir dir="build"/>
  </target>


  <!-- =================================================================
       compile: just compile all src/*.java
       ================================================================= -->
  <target name="compile" depends="init">
    <javac srcdir="src" destdir="build" debug="on"
           classpath="${hadoop.build.dir}" 
	   classpathref="required.lib.path"/>
  </target>


  <!-- =================================================================
       run:
       change working directory to hadoop.root.dir, and run from there,
       and boot (bootclasspath) using the woven-rt.jar
       ================================================================= -->
  <target name="run-old">
    <echo>ant; decprecated. Please run 'make run' instead.</echo>
    <echo>which will run 'ant run | tee /tmp/workloadOut.txt</echo>
  </target>    
		
  <target name="run" depends="compile">
    
    <java classname="org.fi.Main"
          classpath="build; ${hadoop.build.dir};"
          fork="true"
          dir="${hadoop.root.dir}"
          classpathref="required.lib.path">
      <bootclasspath>
        <pathelement location="${hadoop.root.dir}/build/woven-rt.jar"/>
        <pathelement location="${jce.file}"/>
        <pathelement location="${jsse.file}"/>
      </bootclasspath>
    </java>

  </target>


  <!-- =================================================================
       clean up
       ================================================================= -->
  <target name="clean">
    <delete dir="build"/>
  </target>


</project>

